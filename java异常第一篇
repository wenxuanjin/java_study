   java异常开篇

   大家好，我是轩， 朋友门都叫我轩、大家叫我小金就好。很早就知道github很火了，但一直都没去用。最近终于准备开始试着用用了。正好最近开始重新学习java基础，就顺便把相关学习心得写在github上，就当练手使用了。

   今天本来是在看IO的，但在看源码的时候，看着看着就到了异常里面了，所以今天就先写篇异常的文章吧

首先问大家几个问题，好带着问题去学习哈。

问题一：什么是java异常？

问题二：异常有什么用？

问题三：Java内部异常模块是怎么设计的？

   嘿嘿，今天就这三问，有多少人能够马上回到我啊，反正小金我是回答不出来啊。

   好吧，说实话，今天我也没有准备回到上面的问题，因为对小金来说这三个问题太难了，回到不了。今天

我准备和大家讲讲Throwable这个类。这个类是所有异常的祖宗辈，其他个乱七八糟的异常啊都是他孙子。 
而他自己啊其实就只有那么两个儿子，一个是我们都很熟悉的Exception、另一个是Error.这两个儿子人品
到底怎么样我就不得而知来。反正今天我没有见过他们，今天也还是我初次和他老爹见面呢。

	 接下来还是有我先详细的给大家介绍介绍Throwable吧。你们猜他住在哪里啊，对滴，估计很多人
都知道的吧，他就是住在java.lang那里，啊？居然还有人会不知道这个地方，那我下次再给你介绍
java.lang啊，今天就不说啦。然后我对Throwable的第一印象是什么呢？“乱起八糟、罗里吧嗦”。全他么是
英文啊，还让不让人活啊。扯远了扯远了，还是讲回重点吧。Throwable他呢有这这么四种属性，我插类，
这么牛B，不会是查克拉吧。首先是Object的backtrace,好像是什么牛B哄哄的本地方法代码要用到，好吧无
视不管他，顺便提一句，他是有transient光环照耀着的，牛B吧。无视序列化效果，小弟拜服啦。

	“我茶类，又他么不讲重点了，找抽啊”。好吧，接下来说个有用的把，detailMessage,恩，私有的，然后是String类型的东东。没有错，你所有传达给Throwable的话都是放在这里的。除了String.detailMessage,还有一个重要的组成部分stackTrace,传说中的异常堆栈。说到这，就不得不提StackTraceElement了，堆栈元素。我茶类，这货又是什么玩意，为什么我都不知道他的存在。其实大家应该是很熟悉而且经常性见到他的，只不过见到了不认识而已。每次StackTraceElement就是控制台输出的错误信息，而每一行的错误信息都是一个StackTraceElement对象。
    private String declaringClass;//抛出异常的类名    
    private String methodName;//抛出异常的方法名
    private String fileName;//抛出异常的java文件名
    private int    lineNumber;//抛出异常的行数
    
    public String toString() {
        return getClassName() + "." + methodName +
            (isNativeMethod() ? "(Native Method)" :
             (fileName != null && lineNumber >= 0 ?
              "(" + fileName + ":" + lineNumber + ")" :
              (fileName != null ?  "("+fileName+")" : "(Unknown Source)")));
    }

上面这个就是输出的方法，怎么样是不是很熟悉啊。
看下面就是这个对象的toString()输出的结果，也就是我们常常看到的异常信息

例如： java.lang.StackTraceElement.<init>(StackTraceElement.java:52)

接下来在看看StackTraceElement的构造方法吧。

   public StackTraceElement(String declaringClass, String methodName,
                             String fileName, int lineNumber) {
        if (declaringClass == null)
            throw new NullPointerException("Declaring class is null");
        if (methodName == null)
            throw new NullPointerException("Method name is null");
 
        this.declaringClass = declaringClass;
        this.methodName     = methodName;
        this.fileName       = fileName;
        this.lineNumber     = lineNumber;
    }

恩，小金你明白了嘛，轩哥我是明白了，这货的作用就是存储了下异常信息，记录了当某个异常发生时，当时的类、方法、文件和行数的信息。懂了、懂了，小金明白了。

那轩哥啊，小金还有个地方不明白，StackTraceElement不是把异常发生的相关信息都记录下来了，所以     Throable拥有他我也明白了，但为什么不是一个而是一组啊。
让大家看下Throwable具体的属性拥：

     private transient Object backtrace;
     private String detailMessage;
     private StackTraceElement[] stackTrace;
     private Throwable cause = this;

小金啊，你平时用异常的时候会不会向外抛出啊。会啊，轩哥。这就对了，只要你的异常转移了，那就会生成一个StackTraceElement对象，而从他内部的属性可以看得出来，转移的最小单位应该是方法，只要在方法间移动了，那么就会长生一个新的StackTraceElement对象，并且会保存在Throwable的stackTrace里面。哦，懂了，小金明白了。

	哎，太晚了，轩哥要先睡觉了，今天就聊到这吧。













