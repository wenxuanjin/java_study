
	大家好，我是轩哥，很高兴又和大家见面了。
 	今天要和大家讲的是java IO.什么是IO ？IO的英文翻译是Input Output的缩写，也就是输入和输
出。没错java.io这个包下面的API主要是用于处理输入和输出的。那么如何理解这输入和输出呢？问得好。
我是这么理解的，首先这输入和输出针对的应该是内存，数据输入到内存或从内存输出。然后输入必定会存
在一个数据源，而输出也同意存在接收端。或者我们可以换一个角度来理解这些知识。
	接下来让我们站在数学的角度来看待这个问题。让我们来分析下IO，我们能从中得出什么？就说输
入吧，拆开两个字，‘输’、‘入’，这是两个动作，而实际背后隐藏了他们的实体。我们就把这两个实体看成
是集合。数据源我们记为集合A,接收端记为集合B,而数据就是就是集合里面的元素,这里我们可以暂时认为
数据一个字节大小的数据，实际上在计算机里面都是0和1,而计算机是通过特定的电压来表示0和1的，而多个
0和1能够组合成不同的指令。数据实际上是存储在不同的介质上的，如内存、硬盘等，而不同的存储介质共
同特点是可以通过各种不同的形式来表示0和1。然后我们可以按照一定的法则把集合A中的数据与集合B中的
数据一一对应，也就是每个字节的在集合A中每个字节的数据可以在集合B中找到，而java IO就是这样的法
则，或者说java IO API是集合A到集合B的映射.如过把IO API记为法则f，则可记为f：A->B.
	上面是把数据源和接收端当做集合来处理，而每个字节的数据当做是一个元素.根据数据源或者接收
端的不同，java提供了不同的法则。不论是输入还是输出内存这个集合总是存在的，就拿文件数据输入到内
存来说，其实就是数据从磁盘映射到内存，而java IO中的FileInputStream这个类提供了这样的法则。而像
ByteArrayInputStream这样的法则对应的集合又不一样，两个集合都是属于内存中的元素，这是一个自身的
映射。A=B,f:A->B.




